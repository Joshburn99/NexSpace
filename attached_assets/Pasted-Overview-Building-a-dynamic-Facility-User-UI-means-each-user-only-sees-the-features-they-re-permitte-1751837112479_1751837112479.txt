Overview
Building a dynamic Facility User UI means each user only sees the features they’re permitted to use. We need to adapt navigation menus, pages, and controls (like buttons) based on the facility user’s role and permissions. This ensures that, for example, a user without create shift permission never sees an “Add Shift” button, and someone without billing access can’t view financial pages. Both frontend and backend must enforce these rules for security and clarity. Below we recap the facility roles and their permissions, then detail which UI elements each permission should control, followed by a step-by-step plan to implement these changes.
Facility User Roles & Permissions Overview
Each facility user role comes with a predefined set of permissions (from the facility_user_role_templates table). Here’s a summary of the roles and what they are allowed to do:
Facility Administrator: Full access to all facility features. Permissions include: managing schedules (view/create/edit/delete shifts, assign staff, approve requests), managing staff (view/add/edit/deactivate staff, manage credentials), editing facility profile/settings, billing (view/manage invoices and rates, approve invoices), view reports/analytics, export data, manage compliance documents, manage other facility users & permissions, and view audit logs. This role essentially sees everything in the UI.
Scheduling Manager: Focused on staff scheduling and shift management. Permissions: view schedules, create/edit shifts, assign staff to shifts, approve shift requests, view staff list, and view reports/analytics. Scheduling Managers will see the scheduling calendar with full edit controls and relevant reports, but no access to billing, compliance, or facility settings.
HR Manager: Focused on human resources. Permissions: view staff, create/edit staff profiles, deactivate staff, view & manage staff credentials, manage compliance items, upload documents (e.g. credentials/policies), view reports, and export data. HR Managers see the staff directory and compliance/credential management sections. They do not see the scheduling calendar or billing pages.
Department Head: Manages a specific department’s scheduling and staff. Permissions: view schedules, create/edit shifts, assign staff (likely for their department), view staff, view reports, view analytics. Department Heads get the scheduling calendar (with editing capabilities) and staff directory access, but limited to viewing data (no adding new staff). No billing or compliance management in their UI.
Billing Manager: Handles financials and billing. Permissions: view and manage billing info, view and edit rates, approve invoices, view reports, export data, view analytics. Billing Managers will see Billing pages (invoices, rates) and related reports/analytics. They won’t see scheduling or staff management UIs since they lack those permissions.
Staff Coordinator: Coordinates scheduling at a basic level. Permissions: view schedules, assign staff to shifts, view staff, view reports. Staff Coordinators can view the calendar and assign employees to open shifts, but cannot create or edit shift details. They also see the staff list (read-only) and can view reports, but have no access to billing, analytics, or compliance management.
Viewer (Read-Only): Can only view data without making changes. Permissions: view schedules, view staff, view facility profile, view billing info, view reports, view compliance status. Viewers get a read-only UI: they can navigate the schedule, staff directory, facility profile, basic billing info, and compliance dashboards, but no edit buttons or management controls (no adding shifts, no editing staff, etc.). This role is for stakeholders who need insight into the system but not control.
(Note: The application’s internal UserRole for facility users might currently be a generic FACILITY_MANAGER. Going forward, you may want to handle each sub-role separately or use the permissions array for fine-grained checks, as described below.)