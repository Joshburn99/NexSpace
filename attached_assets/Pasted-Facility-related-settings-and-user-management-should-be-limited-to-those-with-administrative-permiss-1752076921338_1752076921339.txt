Facility-related settings and user management should be limited to those with administrative permissions:
View Facility Profile (view_facility_profile): If a user has this, they can access a page showing the facility’s information (name, location, contacts, etc.). We should provide a Facility Profile page (or modal) that presents this data. For roles like Viewer (who has this permission), it’s read-only. For any role without it, you can hide the facility info page or section (though most roles likely have it by default except maybe staff who are not facility users).
Edit Facility Profile (edit_facility_profile): If the user can edit, the Facility Profile page should have an “Edit” or “Settings” button enabling fields to change facility details. Only Facility Admin (or possibly certain corporate/regional roles) would have this. When this permission is present, render editable fields or a link to Facility Settings. Without it, the profile remains purely informational.
Manage Facility Settings (manage_facility_settings): This might overlap with editing the profile, but could also encompass deeper settings (like scheduling rules, notification preferences, etc.). If a user has this, consider giving them access to a Facility Settings section where they can configure advanced options (many of which might tie to the workflowAutomationConfig, shiftManagementSettings, etc. in your schema). For example, auto-approval toggles, overtime rules, etc. Only top-level admins at the facility should see this option. In the UI, this could be a subsection of the facility profile or a separate Settings menu item.
Manage Facility Users (manage_facility_users): Allows the user to administer other facility user accounts (within their facility). In practice, only a Facility Administrator would have this. With this permission, the user should be able to go to a Facility Users management page where they can see all sub-accounts (Scheduling Managers, HR Managers, etc. for that facility), invite new facility users, or change their roles/permissions.
If not already present, implement a page (maybe under an Admin or Team section) listing facility-level users. This is similar to an admin console but scoped to the facility. For inspiration, consider how UKG or Kronos might let an admin manage managers’ access.
Only show the navigation link for this page if manage_facility_users is true. (The sidebar currently has “Facility Users” under Admin for client-level admins
GitHub
, but you may allow facility admins to have a similar page for their facility. You might reuse the component but filter by facility.)
Manage Permissions (manage_permissions): This goes hand-in-hand with managing facility users – it implies the ability to assign roles or tweak permissions for others. If a user has this (facility admin), on the Facility Users page they should have controls to edit each user’s role or permission set (for example, changing a Staff Coordinator to a Scheduling Manager role, or toggling specific permissions if you allow custom combinations).
If you implement role templates selection, ensure only users with this permission see the UI to change roles/permissions.
This could be an “Edit Role” button next to each user on the list, visible only to authorized admins.
No other roles should see this page or control; e.g., a Scheduling Manager should not see a list of facility users at all.
View Audit Logs (view_audit_logs): Allows viewing the audit trail of actions (if your system records log entries in facility_user_activity_log). A Facility Admin with this permission could have access to an Audit Logs page showing recent activities (shift creations, edits, user logins, etc.) in their facility. This page should be available only if the permission is present. In the sidebar, currently “Audit Logs” is listed under Admin for super admins
GitHub
; consider also showing a facility-scoped version for facility admins. If implementing, ensure the log data is filtered to their facility and does not expose other facilities’ info.
In summary, only the Facility Administrator should see all of these admin-level UIs. Other roles will either have none of these (e.g., Scheduling Manager sees no facility settings or user management) or a subset (e.g., a Viewer might see the facility profile info but nothing else). This segregation mirrors best practices in platforms like OnShift or UKG where only administrators can manage accounts and settings.
