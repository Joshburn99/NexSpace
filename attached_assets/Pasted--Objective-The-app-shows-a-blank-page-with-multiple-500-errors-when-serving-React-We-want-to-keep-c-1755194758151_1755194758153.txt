
Objective
The app shows a blank page with multiple 500 errors when serving React. We want to keep current calendar changes and fix the server/Vite 500s (no rollback unless we explicitly say so). Deliver a concise report of the root cause + fixes.

Guardrails
	•	Don’t delete files.
	•	Prefer surgical diffs and clear commit messages.
	•	If an issue is found, fix and re-run typecheck/dev before moving to the next step.
	•	If a step fails, stop and report.

PHASE 0 — Snapshot (Git)
	1.	Create and checkout a new branch: debug/blank-page-500.
	2.	Commit all current changes with message: chore(debug): snapshot before 500 diagnosis.

PHASE 1 — Quick Triage
	1.	Run npm run dev and capture server output.
	2.	Hit health endpoint: curl -s http://localhost:5000/api/health || true. Note status.
	3.	From the dev logs, copy the first stack trace that corresponds to a 500 serving a client module (e.g., Vite transform error) and include it in the final report.

PHASE 2 — Common 500 Culprits (scan & fix)
We’re likely seeing one of these (check in order):

A) Server-only imports used in client code
Search under src/ for imports referencing Node or server code:
	•	from "fs", from "path", from "crypto", from "http", from "express"
	•	from "drizzle-orm", from "drizzle-orm/pg-core", from "@shared/schema"
	•	anything starting with from "../server/…" or from "server/…"
If found in client files, refactor:
	•	Create a client-safe type file (e.g., src/types/shift.ts) with plain TS interfaces.
	•	Replace imports so client never pulls server/DB modules.
	•	For shared constants, create src/lib/shared-client.ts (no Node/DB deps).
Re-run dev; note if 500s disappear.

B) Bad Vite import or circular dependency
	•	Check the files mentioned in the 500 stack for things like JSON imports without assertion, missing file extensions in ESM, or circular re-exports between components.
	•	Fix by adding proper paths (no server aliases), removing circular imports, or converting import data from "./x.json" to await fetch("/path") or import x from "./x.json?raw" if needed.

C) process.env in client bundle
	•	Search src/ for process.env. Use import.meta.env instead.
	•	If you need a variable client-side, prefix with VITE_ and reference import.meta.env.VITE_*.

D) Vite alias drift
	•	Open vite.config.* and ensure aliases for @ or @shared do not resolve to server-only directories when used from src/.
	•	If @shared/schema is aliased to a server path, restrict alias usage to the server or create @client alias for client-safe modules.

PHASE 3 — Calendar changes sanity check (non-breaking)
Since we recently touched calendar code:
	1.	Open the updated month-view calendar component. Ensure it does not import server modules (storage, db, drizzle, server routes).
	2.	Verify FullCalendar imports are from @fullcalendar/* only.
	3.	Ensure event data comes via API calls or mocked data; no direct server imports.
	4.	Type errors? Fix with client-side DTOs (no drizzle types in the client).

PHASE 4 — Build & Smoke
	1.	Run npm run check and fix any TS errors.
	2.	Run npm run dev.
	3.	Confirm the app renders (not blank).
	4.	Visit the calendar page; month view should load with shift blocks.
	5.	Provide a short summary of the exact root cause(s) and the code changes made.

PHASE 5 — Commit & Report
	1.	Commit with: fix(serve): resolve client 500s (server-only import / vite alias / env usage)
	2.	Final output:
	•	Root cause (one line).
	•	Files changed (paths).
	•	Before/after import lines for any key fixes.
	•	Any follow-ups (e.g., create src/types/* for shared DTOs, add VITE_ env docs).

OPTIONAL — If everything still fails
	•	Pause and list the top two failing stack traces and the files they point to.
	•	Do not roll back unless explicitly directed.
